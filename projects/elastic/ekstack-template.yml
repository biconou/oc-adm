apiVersion: v1
kind: Template
metadata:
  name: ekstack-template
  annotations:
    description: "This template is for the creation of an elasticsearch / kibana stack"
    tags: "elasticsearch,kibana"
  labels:
    template: "ekstack-template" 
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      build: elasticsearch
    name: elasticsearch
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: kibana
  spec:
    lookupPolicy:
      local: false
    tags:
    - from:
        kind: DockerImage
        name: 'docker.elastic.co/kibana/kibana:6.5.4'
      name: 6.5.4
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      build: elasticsearch
    name: elasticsearch
  spec:
    failedBuildsHistoryLimit: 2
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: 'elasticsearch:latest'
    source:
      binary: {}
      type: Binary
    strategy:
      dockerStrategy: {}
      type: Docker
    successfulBuildsHistoryLimit: 2
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: elasticsearch
    name: elasticsearch
  spec:
    replicas: 1
    selector:
      app: elasticsearch
      deploymentconfig: elasticsearch
    template:
      metadata:
        labels:
          app: elasticsearch
          deploymentconfig: elasticsearch
      spec:
        containers:
          - image: elasticsearch
            imagePullPolicy: Always
            name: elasticsearch
            ports:
              - containerPort: 9200
                protocol: TCP
              - containerPort: 9300
                protocol: TCP
            volumeMounts:
              - mountPath: /usr/share/elasticsearch/data
                name: volume-elasticsearch-data
        volumes:
          - name: volume-elasticsearch-data
            persistentVolumeClaim:
              claimName: elasticsearch-data
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - elasticsearch
          from:
            kind: ImageStreamTag
            name: 'elasticsearch:latest'
        type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: kibana
    name: kibana
  spec:
    replicas: 1
    selector:
      app: kibana
      deploymentconfig: kibana
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: kibana
          deploymentconfig: kibana
      spec:
        containers:
          - image: docker.elastic.co/kibana/kibana:6.5.4
            imagePullPolicy: IfNotPresent
            name: kibana
            ports:
              - containerPort: 5601
                protocol: TCP
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - kibana
          from:
            kind: ImageStreamTag
            name: 'kibana:6.5.4'
        type: ImageChange
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: elasticsearch-data
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: elasticsearch
    name: elasticsearch
  spec:
    ports:
      - name: 9200-tcp
        port: 9200
        protocol: TCP
        targetPort: 9200
      - name: 9300-tcp
        port: 9300
        protocol: TCP
        targetPort: 9300
    selector:
      app: elasticsearch
      deploymentconfig: elasticsearch
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: kibana
    name: kibana
  spec:
    ports:
      - name: 5601-tcp
        port: 5601
        protocol: TCP
        targetPort: 5601
    selector:
      app: kibana
      deploymentconfig: kibana
    type: ClusterIP
parameters: